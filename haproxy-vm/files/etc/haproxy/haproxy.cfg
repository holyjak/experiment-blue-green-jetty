# This config needs haproxy-1.4
# Start with e.g. sudo haproxy -f /etc/haproxy/haproxy.cfg -d
# See "4.1 Soft-stop using a file on the servers" at
# http://haproxy.1wt.eu/download/1.3/doc/architecture.txt

global
	log 127.0.0.1	local0
	log 127.0.0.1	local1 notice
	maxconn 4096
	user haproxy
	group haproxy
	daemon

defaults
        # Use an existing cookie for sticky sessions, prefix its value
	# with the server name
        # Alternative to the cookie directove: appsession JSESSIONID len 36 timeout 15m request-learn
	cookie JSESSIONID prefix
	option httpclose # force all through haproxy; needed?
	# The default defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	retries	3
	option redispatch
	maxconn	2000
	contimeout	5000
	clitimeout	50000
	srvtimeout	50000

listen admin_stats *:81
        stats enable
        stats uri /stats
        stats refresh 5s
        # stats admin if LOCALHOST # enable en/disabling servers from the web UI
	# It's necessary to declare a faked (unused) server becasue
	# we declare cookies globally
	server fake 127.0.0.1:80 cookie not-used

frontend http_proxy *:80
        acl force_zone_blue hdr_sub(cookie) X-Force-Zone=blue
        acl force_zone_green hdr_sub(cookie) X-Force-Zone=green
	use_backend blue if force_zone_blue
	use_backend green if force_zone_green
	default_backend active_zone

backend blue
        server  blue 127.0.0.1:8000 cookie blue # forced -> not health check!

backend green
        server  green 127.0.0.1:9000 cookie green # forced -> not health check!

backend active_zone
        option httpchk HEAD /health
	balance	roundrobin
        # persist needed to keep sending existing sessions to their server
        # even though it claims to be unavailable; redispatch will send it to
        # the other one if it really is down
        option persist
        option redispatch

        # Default settings for all servers: 
        # (Check every 2 sec, require 2 checks to mark failed/ok [~ 4-5sec])
        default-server inter 2000 rise 2 fall 2

	server	blue 127.0.0.1:8000 cookie blue check
	server	green 127.0.0.1:9000 cookie green check

	#errorfile	503	/etc/haproxy/errors/503.http
	errorfile	400	/etc/haproxy/errors/400.http
	errorfile	403	/etc/haproxy/errors/403.http
	errorfile	408	/etc/haproxy/errors/408.http
	errorfile	500	/etc/haproxy/errors/500.http
	errorfile	502	/etc/haproxy/errors/502.http
	errorfile	503	/etc/haproxy/errors/503.http
	errorfile	504	/etc/haproxy/errors/504.http
